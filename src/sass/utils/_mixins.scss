// Responsive design
// If you want we could use this mixins too
// https://gist.github.com/davidgilbertson/ad24b42b0eddde2dc6b1b51f9460af11#file-css-breakpoint-mixins-scss

// Style will work only from this breakpoint
@mixin respond-from-min($breakpoint) {
  @media screen and (min-width: #{$breakpoint}) {
    @content;
  }
}

// Style will work only to this breakpoint
@mixin respond-to-max($breakpoint) {
  @media screen and (max-width: #{$breakpoint}) {
    @content;
  }
}

// Миксин для шрифта (font-size, line-height, font-weight)
@mixin font-source-sans($size: false, $lh: false, $weight: false) {
  @if $size {
    font-size: $size;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $lh {
    line-height: decimal-round($lh / $size, 2);
  }
}

@function decimal-round($number, $digits: 0, $mode: round) {
  $n: 1;
  // $number must be a number
  @if type-of($number) != number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }

  // $digits must be a unitless number
  @if type-of($digits) != number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  } @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }

  @if $digits > 0 {
    @for $i from 1 through $digits {
      $n: $n * 10;
    }
  }

  @if $mode == round {
    @return round($number * $n) / $n;
  } @else if $mode == ceil {
    @return ceil($number * $n) / $n;
  } @else if $mode == floor {
    @return floor($number * $n) / $n;
  } @else {
    @warn '#{ $mode } is undefined keyword.';
    @return $number;
  }
}

// ========== Для retina изображений ==========
@mixin retina($image, $width: 'false', $gradient: 'false') {
  @if $width != 'false' and $gradient != 'false' {
    @media screen and (min-device-pixel-ratio: 2) and (min-width: $width),
      screen and (min-resolution: 192dpi) and (min-width: $width),
      screen and (min-resolution: 2dppx) and (min-width: $width) {
      background-image: $gradient, url($image);
    }
  } @else if $width != 'false' and $gradient == 'false' {
    @media screen and (min-device-pixel-ratio: 2) and (min-width: $width),
      screen and (min-resolution: 192dpi) and (min-width: $width),
      screen and (min-resolution: 2dppx) and (min-width: $width) {
      background-image: url($image);
    }
  } @else if $width == 'false' and $gradient == 'false' {
    @media screen and (min-device-pixel-ratio: 2),
      screen and (min-resolution: 192dpi),
      screen and (min-resolution: 2dppx) {
      background-image: url($image);
    }
  } @else if $width == 'false' and $gradient != 'false' {
    @media screen and (min-device-pixel-ratio: 2),
      screen and (min-resolution: 192dpi),
      screen and (min-resolution: 2dppx) {
      background-image: $gradient, url($image);
    }
  }
}
